---
- meta: end_play
  when: (ansible_distribution != "CentOS" and ansible_distribution_major_version != "7")

- name: Install components for building
  yum:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
    - git
    - autoconf
    - automake
    - libtool
    - gcc
    - python-pip
    - nss-devel
    - libxml2-devel
    - uuid-devel
    - libuuid-devel
    - libvirt-devel
    - corosynclib-devel
    - bison
    - byacc

- name: Install required pip modules
  pip:
    name: "{{ packages }}"
  vars:
    packages:
    - pexpect
    - requests

- name: Check for replay (/opt/pcs_fence_install_done exists)
  stat:
    path: /opt/pcs_fence_install_done
  register: pcs_fence_install_done

- name: Clean old build directory (/root/fence-agents)
  file:
    path: /root/fence-agents
    state: absent
    force: yes
  when:
    - pcs_fence_install_done.stat.exists != True

- name: Clone fence-agents from git to /root/fence-agents
  git:
    repo: 'https://github.com/ClusterLabs/fence-agents.git'
    dest: /root/fence-agents/
    clone: yes
    version: "v4.7.1"
  when:
    - pcs_fence_install_done.stat.exists != True

- name: Run pre-build scripts from /root/fence-agents
  command: "{{ item }}"
  args:
    chdir: /root/fence-agents/
  with_items:
    - "/root/fence-agents/autogen.sh"
    - "/root/fence-agents/configure"
  when:
    - pcs_fence_install_done.stat.exists != True

- name: Build fence-agents
  make:
    chdir: /root/fence-agents/
  when:
    - pcs_fence_install_done.stat.exists != True

- name: Install fence-agents
  make:
    chdir: /root/fence-agents/
    target: install
  when:
    - pcs_fence_install_done.stat.exists != True

- name: Set replay protection (/opt/pcs_fence_install_done)
  file:
    path: /opt/pcs_fence_install_done
    state: touch
    owner: root
    group: root
    mode: '0744'
  when:
    - pcs_fence_install_done.stat.exists != True
...
